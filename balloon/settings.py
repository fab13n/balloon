"""
Django settings for balloon project.

Generated by 'django-admin startproject' using Django 2.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os
import sys
from pathlib import Path

IS_IN_DOCKER = Path("/.dockerenv").is_file()

BASE_PATH = Path(__file__).parent.parent.absolute()
BASE_DIR = str(BASE_PATH)

if IS_IN_DOCKER:
    # Cannot convince uwsgi/django to talk in UTF-8 otherwise
    #import sys
    #import codecs
    #sys.stdout = codecs.getwriter("utf-8")(sys.stdout.detach())
    pass

GRIB_PATH = Path("/home/balloon/data") if IS_IN_DOCKER else BASE_PATH / 'data'

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '-+_2uy7x@k%-1%p+4$v@zr-qmaqtiq4a1a41h*8(oj0j+dx_a1'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# No need to protect access to data, the site only serves public data
ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'core',
    'forecast'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'balloon.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'balloon.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = False  # Everything in DB and UI is supposed to be in UTC


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = BASE_PATH.parent / "html" / "static"

PREPROCESS_BOX = {
    "lat1": 42.,
    "lat2": 52.,
    "lon1": 0.,
    "lon2": 9.
}

ACTIVE_MODELS = ["ARPEGE_0.5"]

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'docker-logs': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': '/home/balloon/log/django-debug.log' if IS_IN_DOCKER else BASE_PATH / "log/django-debug.log",
        },
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'stream': sys.stdout
        }
    },
    'loggers': {
        'django': {
            'handlers': ['docker-logs' if IS_IN_DOCKER else 'console'],
            'level': 'DEBUG',
            'propagate': True,
        },
        'balloon': {
            'handlers': ['docker-logs' if IS_IN_DOCKER else 'console'],
            'level': 'DEBUG',
            'propagate': True,
        },
    },
}
